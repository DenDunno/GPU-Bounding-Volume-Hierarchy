#pragma kernel CSMain
#pragma enable_d3d11_debug_symbols
#include "Frustum.hlsl"
#include "SphereData.hlsl"

RWStructuredBuffer<int> _ActiveTiles;
StructuredBuffer<SphereData> _Spheres;
StructuredBuffer<Frustum> _SubFrustums;
float4x4 _CameraWorldToLocal;
int _SpheresCount;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    const uint tileIndex = id.x;

    Frustum subFrustum = _SubFrustums[tileIndex];
    const SphereData sphere = _Spheres[id.y];
    const float3 sphereCameraSpacePosition = mul(_CameraWorldToLocal, float4(sphere.position, 1)).xyz;
    const int isVisible = 1 - subFrustum.IsOutside(sphereCameraSpacePosition, sphere.radius);
        
    if (isVisible == 1)
    {
        InterlockedAdd(_ActiveTiles[tileIndex], 1);
    }
}