#pragma kernel CSMain
#pragma enable_d3d11_debug_symbols
#include "Frustum.hlsl"
#include "SphereData.hlsl"

//RWStructuredBuffer<int> _VisibleSpheresCount;
RWStructuredBuffer<int> _VisibleSpheres;
StructuredBuffer<SphereData> _Spheres;
StructuredBuffer<Frustum> _Frustum;
float4x4 _CameraWorldToLocal;
int _SpheresCount;

[numthreads(8,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _SpheresCount) return;
    
    const SphereData sphere = _Spheres[id.x];
    Frustum cameraFrustum = _Frustum[0];
    
    const float3 sphereCameraSpacePosition = mul(_CameraWorldToLocal, float4(sphere.position, 1)).xyz;
    const int isVisible = 1 - cameraFrustum.IsOutside(sphereCameraSpacePosition, sphere.radius);
    
    if (isVisible)
    {
        const int index = _VisibleSpheres.IncrementCounter();
        _VisibleSpheres[index] = id.x;
    }
}