#pragma kernel Build
#define THREADS 256
#include "NearestNeighbour.hlsl"
#include "ScanPhase.hlsl"
#include "MergingPhase.hlsl"

[numthreads(THREADS,1,1)]
void Build(const uint threadId : SV_GroupThreadID, const uint groupId : SV_GroupID)
{
    uint blockOffset = groupId * THREADS;

    uint nearestNeighbour = FindNearestNeighbour(threadId, blockOffset);
    PreMergeResult mergeResult = PreComputeMergeResult(nearestNeighbour, threadId, blockOffset);
    PreMergeScanResult scan = PerformInclusiveGlobalScan(threadId, groupId, mergeResult);
    BVHNode resultNode = TryMerge(nearestNeighbour, threadId, blockOffset, mergeResult.CanMerge, scan.MergedNodes);
    CompressValidNodes(mergeResult.IsValidNode, scan.ValidNodes, resultNode);
}
